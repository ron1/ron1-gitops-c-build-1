apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization

namespace: argocd

resources:
- github.com/argoproj/argo-cd/manifests/cluster-install?ref=v2.4.11
#- github.com/argoproj-labs/argocd-autopilot/manifests/base?ref=v0.4.2

configMapGenerator:
- name: argocd-cm
  behavior: merge
  literals:
  - kustomize.buildOptions="--enable-helm"
#  - |
#    repository.credentials=- passwordSecret:
#        key: git_token
#        name: autopilot-secret
#      url: https://github.com/
#      usernameSecret:
#        key: git_username
#        name: autopilot-secret
  - |
    resource.customizations.health.argoproj.io_Application=hs = {}
    hs.status = "Progressing"
    hs.message = ""
    if obj.status ~= nil then
      if obj.status.health ~= nil then
        hs.status = obj.status.health.status
        if obj.status.health.message ~= nil then
          hs.message = obj.status.health.message
        end
      end
    end
    return hs
  - |
    resource.customizations.health.cert-manager.io_Certificate=hs = {}
    if obj.status ~= nil then
      if obj.status.conditions ~= nil then
        for i, condition in ipairs(obj.status.conditions) do
          if condition.type == "Issuing" and condition.status == "True" then
            hs.status = "Progressing"
            hs.message = condition.message
            return hs
          end
          if condition.type == "Ready" and condition.status == "False" then
            hs.status = "Degraded"
            hs.message = condition.message
            return hs
          end
          if condition.type == "Ready" and condition.status == "True" then
            hs.status = "Healthy"
            hs.message = condition.message
            return hs
          end
        end
      end
    end

    hs.status = "Progressing"
    hs.message = "Waiting for certificate"
    return hs
  - |
    resource.customizations.health.cert-manager.io_Issuer=hs = {}
    if obj.status ~= nil then
      if obj.status.conditions ~= nil then
        for i, condition in ipairs(obj.status.conditions) do
          if condition.type == "Ready" and condition.status == "False" then
            hs.status = "Degraded"
            hs.message = condition.message
            return hs
          end
          if condition.type == "Ready" and condition.status == "True" then
            hs.status = "Healthy"
            hs.message = condition.message
            return hs
          end
        end
      end
    end

    hs.status = "Progressing"
    hs.message = "Initializing issuer"
    return hs

secretGenerator:
- name: cluster-in-cluster-local
  literals:
  - config='{"tlsClientConfig":{"insecure":false}}'
  - name="in-cluster-local"
  - server="https://kubernetes.default.svc"

generatorOptions:
  disableNameSuffixHash: true

patches:
- patch: |-
    apiVersion: v1
    kind: Secret
    metadata:
      name: cluster-in-cluster-local
      labels:
        argocd.argoproj.io/secret-type: cluster
        clusterId: in-cluster-local
        clusterName: c-build-1
        environmentId: dev
        kyverno: dev
